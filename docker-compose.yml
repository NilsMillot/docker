version: "3"
services:
  api-server:
    image: api-server
    ports:
      - "5001:5000"
    networks:
      - projet-docker
    depends_on:
      - mongo
  FRONT-react-app-cine:
    image: react-app
    stdin_open: true
    ports:
      - "3001:3000"
    networks:
      - projet-docker
  BDD-mongo:
    image: mongo:3.6.19-xenial
    ports:
      - "27017:27017"
    networks:
      - projet-docker
    volumes:
      - mongo-data:/data/db
  BDD-Admin_phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 8080:80
    environment:
      - PMA_ARBITRARY=1
  MAILING:
    image: mailhog/mailhog
    logging:
      driver: "none" # disable saving logs
    ports:
      - 1025:1025 # for server
      - 8025:8025 # for web ui
  REDIS:
    image: "redis:6.2.4-alpine3.14"
    ports:
      - "6379:6379"
    volumes:
      - $PWD/redis-data:/var/lib/redis
      - $PWD/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - projet-docker
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.3.2
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
  kibana:
    image: docker.elastic.co/kibana/kibana:6.3.2
    ports:
      - "5601:5601"
  logstash:
    image: "logstash:6.8.17"
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    depends_on:
      - elasticsearch
networks:
  projet-docker:
    driver: bridge
volumes:
  mongo-data:
    driver: local
